{
	"name": "Flatten_demo",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Json",
						"type": "DatasetReference"
					},
					"name": "JsonSrc"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SQLtable",
						"type": "DatasetReference"
					},
					"name": "JsonFltSink"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as integer,",
				"          name as string,",
				"          iso3 as string,",
				"          iso2 as string,",
				"          numeric_code as string,",
				"          phone_code as string,",
				"          capital as string,",
				"          currency as string,",
				"          currency_name as string,",
				"          currency_symbol as string,",
				"          tld as string,",
				"          native as string,",
				"          region as string,",
				"          States as string[],",
				"          subregion as string,",
				"          timezones as (zoneName as string, gmtOffset as integer, gmtOffsetName as string, abbreviation as string, tzName as string)[],",
				"          translations as (kr as string, {pt-BR} as string, pt as string, nl as string, hr as string, fa as string, de as string, es as string, fr as string, ja as string, it as string, cn as string, tr as string),",
				"          latitude as string,",
				"          longitude as string,",
				"          emoji as string,",
				"          emojiU as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'singleDocument') ~> JsonSrc",
				"JsonSrc foldDown(unroll(States),",
				"     mapColumn(",
				"          id,",
				"          name,",
				"          iso3,",
				"          iso2,",
				"          numeric_code,",
				"          phone_code,",
				"          capital,",
				"          currency,",
				"          currency_name,",
				"          currency_symbol,",
				"          tld,",
				"          native,",
				"          region,",
				"          States,",
				"          subregion,",
				"          timezones,",
				"          translations,",
				"          latitude,",
				"          longitude,",
				"          emoji,",
				"          emojiU",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flatten1",
				"flatten1 select(mapColumn(",
				"          id,",
				"          name,",
				"          iso3,",
				"          iso2,",
				"          numeric_code,",
				"          phone_code,",
				"          capital,",
				"          currency,",
				"          currency_name,",
				"          currency_symbol,",
				"          tld,",
				"          native,",
				"          region,",
				"          States,",
				"          subregion,",
				"          latitude,",
				"          longitude,",
				"          emoji,",
				"          emojiU",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     recreate:true,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          id,",
				"          name,",
				"          iso3,",
				"          iso2,",
				"          numeric_code,",
				"          phone_code,",
				"          capital,",
				"          currency,",
				"          currency_name,",
				"          currency_symbol,",
				"          tld,",
				"          native,",
				"          region,",
				"          States,",
				"          subregion,",
				"          latitude,",
				"          longitude,",
				"          emoji,",
				"          emojiU",
				"     ),",
				"     partitionBy('hash', 1)) ~> JsonFltSink"
			]
		}
	}
}