{
	"name": "JoinEmpDeptCsvData",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "empcsv",
						"type": "DatasetReference"
					},
					"name": "empcsv"
				},
				{
					"dataset": {
						"referenceName": "deptCSV",
						"type": "DatasetReference"
					},
					"name": "dept"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "empdeptTarget",
						"type": "DatasetReference"
					},
					"name": "OutputempDeptSink",
					"rejectedDataLinkedService": {
						"referenceName": "AzureBlobStorage1",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "empdeptinner"
				},
				{
					"name": "ModifyColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "RemoveColumns1",
					"description": "Autogenerated by data preview actions"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          empid as string,",
				"          enmae as string,",
				"          cntry as string,",
				"          dept as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> empcsv",
				"source(output(",
				"          deptno as string,",
				"          ename as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> dept",
				"cast1, ModifyColumns1 join(dept == deptno,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'off')~> empdeptinner",
				"empcsv derive(enmae = upper(enmae)) ~> ModifyColumns1",
				"empdeptinner select(mapColumn(",
				"          empid,",
				"          enmae,",
				"          cntry,",
				"          dept,",
				"          deptno",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> RemoveColumns1",
				"dept cast(output(",
				"          deptno as integer",
				"     ),",
				"     errors: false) ~> cast1",
				"RemoveColumns1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:['empDeptJoinResult'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          empid,",
				"          enmae,",
				"          cntry,",
				"          dept,",
				"          deptno",
				"     ),",
				"     partitionBy('hash', 1)) ~> OutputempDeptSink"
			]
		}
	}
}